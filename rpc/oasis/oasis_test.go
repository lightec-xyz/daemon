package oasis

import (
	"testing"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

var err error
var client *Client

func init() {
	client, err = NewClient("https://testnet.sapphire.oasis.io",
		[]string{
			"0xBb8b61bD363221281A105b6a37ad4CF7DDf24BAc",
			"0x5ee2C3FABED0780abB5905fCD6DEbf1C3C42C729",
			"0x7e0d35F36a1103Fe0Ad91911b2798Cb24A6beC7f",
		},
	)
	if err != nil {
		panic(err)
	}
}

func TestClient_PublicKey(t *testing.T) {
	publicKey, err := client.PublicKey()
	if err != nil {
		t.Fatal(err)
	}
	for _, item := range publicKey {
		t.Logf("%v\n", hexutil.Encode(item))
	}
}

func TestClient_SignBtcTx(t *testing.T) {
	txRaw, err := hexutil.Decode("0x02f90112824268088459682f00849f2dac7e83068d93944f413972ab2d4e53714a479db1519ce0e89ea30c80b8a40449015a0000000000000000000000000000000000000000000000000000000000002ee0000000000000000000000000000000000000000000000000000000000000031e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000016001408145420b1e7f4dd1716be0ae336a6151e72bc0100000000000000000000c080a0ae57340d999f7df2a2b3d69378ade03f0a10596664900ac48bcb8f6c1b773e6ea03e22f292c7f207cf0946ffa18cca965372184349929c69e5103b1b055a886825")
	if err != nil {
		t.Fatal(err)
	}
	receiptRaw, err := hexutil.Decode("0x02f90461018326d164bf90356f89b94bf3041e37be70a58920a6fd776662b50323021c9f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000008e5fb6fd49a3bb77e8b930e28fedeeed34bf42d8a00000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000031fef89b94bf3041e37be70a58920a6fd776662b50323021c9f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000003fe784e30d12078391a01da98709ddd00d9797a00000000000000000000000000000000000000000000000000000000000000060f89b940ebe0e56b6b106763bbed1da30a4d6fc6064eadaf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000008e5fb6fd49a3bb77e8b930e28fedeeed34bf42d8a0000000000000000000000000000000000000000000000000000006fc23ac0000f9017c944f413972ab2d4e53714a479db1519ce0e89ea30cf842a01e5e2baa6d11cc5bcae8c0d1187d7b9ebf13d6d9b932f7dbbf4e396438845fb8a012d4eeb8b7add75384b1bd6e73ee3bd78171d4884f5acbf83639496cf703262db90120000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000007d02000000013faa6f78548e637a17a8e135ef688ccac469587aef33875ef665077578fd9e6b0000000000ffffffff02802e00000000000016001408145420b1e7f4dd1716be0ae336a6151e72bc01221c000000000000220020d3eaa044dbfccbbf98d192a35d456694991bb037d3c4915e4aedf26d0f12dcd2000000000000000000000000000000000000000000000000000000000000000000000000000001a49d31d94e76ece8481dbf6f29a2134142c3a6909f32511c0306d60490f9e41e")
	if err != nil {
		t.Fatal(err)
	}
	proofData, err := hexutil.Decode("0x1d76c0ee8b3ac7f7be8854b08f352af49f6c63dc9995e32adebc30becf8fe97d2a8f915a504302e52f5e8673c426588b3c80548eec12773cd56b75db4dcf0fbd07c7a4b27329b6160d659e91502c7cc61c0c4d80e97ea46f4e9d25105332eb971f00224b30031c0e6ce694c47bc2d0d5c6f1e74141f0bdb30d6a1bd2e10cb0ca012db9b7fe234841e284ef16c1d388a55780451ab31178d9cc414460efd551921cbc787b635923da755ad1a567b32ad330ede9e3c90216d9dc666619c2a4ab2e118692eedbe1e607a852257e77ee286dbdd3943205ef78aa6ac2ff1ff83e7fe61dcec906e197f4009da616a842c4ab399b076a3d22c0d6e1690e2aaabd4477ef13d49771c78ead724785fffc2159dc179b4bc2590370da8f9958626114b1c53a27ec47e51cd5a496b28e0c39735aa58398cbb1cc8e38a9967049356b6c7335a71b3a486fc1546c0bcea39005f164763401d80e6e48b438b2192c3e8aa67fd3da2a42102f4b9a408113e97e6bad0488a5b52a0aa2eed584b1c99f77c7406e9f5c0a302c2436b11381a503ee59b560f9833cae12aa1dce063fce64ac5f6a2476792f16b6563aadbfa5d0ac115540639c01f467953f1f7c82bf88893db2179d626314078df82765194d05fc14b5a26e19010989e97979eaf47730fff902d86766202d3a4703f380c2457d3e787b8defdf3b60842e3cd61c4e5bf908fb9017931f7c12b48c7101b9a913fcad417823c8d04ac0ad85f883df7f12d3a1351ebbca36542a892fa19f86b77da909d935fe24761d927b2b555c9de071db6c22d8c0d19f0808d5ac6c0236f8c268312336024005e5b04b04ac74082cdee7ac14dade9a73741a79902ace4cad9c73171a059b028f65259567149e5434beee7eae27af1701bb03c29dc9ba07b573740e73d797152d02ecf7b0f72b802767e29334018de85cce0b8401cdf639e0f7c0de2b863dcd4a31334d12730d7298cda1ba52fdbab9358e2c3428f6eff3f7c5344480bc0984f5800bff9e7b46fd67f8f7a14a950f08adf217a72b763bd845d53cc3b7d6c78fe7f24bd644042d5971a2e01b324a3e29cf9c03c4425f053cde4c58300fa03313145de56ab5fd8b8f01bedc4fed1e7eb554f8254a660dd0647c7fc0bf0025764e235c3d5af2923e314916d70e99b7d56825382cefd52b4c9cc603e12aed5472393ef7823d4b6b54b4d9df71228dadfc2c60f7304e66375e75100cfce316dfc60a24060f8ab92ea5ea05ea09fb4330d147c5bb09f0e8127cfea3b74c3055b88a052ba7eb38bcaf6a9e15e5523e3a5fefb9bd20")
	if err != nil {
		t.Fatal(err)
	}
	sig1, sig2, sig3, err := client.SignBtcTx(txRaw, receiptRaw, proofData)
	if err != nil {
		t.Fatal(err)
	}
	t.Log(sig1)
	t.Log(sig2)
	t.Log(sig3)
}
