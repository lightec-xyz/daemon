package dfinity

import "testing"

var client *Client
var err error

func init() {
	//https://a4gq6-oaaaa-aaaab-qaa4q-cai.raw.icp0.io/?id=e32q2-nyaaa-aaaak-qirta-cai
	canisterId := "e32q2-nyaaa-aaaak-qirta-cai"
	client, err = NewClient(canisterId)
	if err != nil {
		panic(err)
	}
}

func TestClient_VerifyPublicKey(t *testing.T) {
	publicKey, err := client.PublicKey()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(publicKey)
}

func TestClient_DummyAddress(t *testing.T) {
	address, err := client.DummyAddress()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(address)
}

func TestClient_EthDecoderCanister(t *testing.T) {
	result, err := client.EthDecoderCanister()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(result)
}

func TestClient_PlonkVerifierCanister(t *testing.T) {
	result, err := client.PlonkVerifierCanister()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(result)
}

func TestClient_Sign(t *testing.T) {
	signature, err := client.VerifyAndSign("02f901128242680184091c805784091c8065830db9e9948e4f5a8f3e24a279d8ed39e868f698130777fded80b8a474f4897c0000000000000000000000000000000000000000000000000000000000023a0700000000000000000000000000000000000000000000000000000000000066e60000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001600147fa97e4885230287d348f2e35c12b2268a1704a100000000000000000000c001a0a84272820ba5aa14226f4bcfb3ad5065dcf19d165fb05e4516fbb97b29a5ad0ea040e9464664b33010b7cc434649c16a1aae32e76a81c65c1dbbd533375bc821e0",
		"02f90461018348677fbf90356f89b94bf3041e37be70a58920a6fd776662b50323021c9f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000691aedb0497ba3be08896edc80eaf89111dcfc62a00000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000002a0edf89b94bf3041e37be70a58920a6fd776662b50323021c9f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000003fe784e30d12078391a01da98709ddd00d9797a0000000000000000000000000000000000000000000000000000000000000048ff89b940ebe0e56b6b106763bbed1da30a4d6fc6064eadaf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000691aedb0497ba3be08896edc80eaf89111dcfc62a0000000000000000000000000000000000000000000000000000054e911a2e000f9017c948e4f5a8f3e24a279d8ed39e868f698130777fdedf842a01e5e2baa6d11cc5bcae8c0d1187d7b9ebf13d6d9b932f7dbbf4e396438845fb8a013ece235607fd3a9c99299c9cd638ac8d4f8f01a7a3dc46495517ad042247486b90120000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000007d02000000010c0a9b1b4a33cae167bfb01c8cc57c949945b2d404dcc48d7633c57744d2d0d50000000000ffffffff0278350200000000001600147fa97e4885230287d348f2e35c12b2268a1704a16d050000000000002200205920637856dee93711f762b72324791ee0322992811087e41d739c1d2095bfeb0000000000000000000000000000000000000000000000000000000000000000000000000000018165e5015491077bce096f2ce5ee6d28b1d56c176d340fedb9f7e61a3a704bb2",
		"2215936421d723468fce1f94253c0386cffa52ae0554fe5f798c0c19f1a34da202980e70b7f6107b78c8b285812cf9e8c756c2cc5edfd961dcd2ef296859b37a0dce7bd7a2c746a086a2b4230f690cd8200961ab83638845c53462dde93cf09c27807fa8211eaae2ee54b948e7ed2500c78c652175b20982683bca87f02036230f1def8fc3e171861374b262ab68a80e561d669a7093b4dd32da8cb26d7f3e0e03619f228a3490112929e69194ebc21f76a9ded5005bc4c4519cc47a673d0b2d182a981ffae57625a49d9c68381bffa04cc4d1096e242eee184ec76988abadab137774b5aff17fa08de0f2d2f5d9764e8228c11164e5a36429d55bea3c1d176126a1c804e34743ec93cadb65a511d9b7bd5f1c5d1bd07262db5d17b83475aad81b5c57ceb7ee335def1387baf6cde624dedd6d0d81716f782ab43bc5d0dd64ae2b60192ff4ec00b29ece0c7600ce8883d0cb6cc517bd8fb94885b20f0da5588423a4c23d582f8cff400913e13ccf592cfd965dc246125db704adecb80b9ba13620c49d314146829389f8206921f595e2c797e6f6585336d0b8febc60cb0ea13c031d07b256ab14f80374dd8586d158684af6cefefbce480938d9900795a757cf1363c0c0894e2ba057b234cb8a4ac6c26f22a75228fad20fae0ae225dd01350f07043d8403a11cf11321aa1bfa0deeefe69dc828e2ee7dd390da36dae1a767691f171718926b1b107f5a5943f587e5f463f7a5ad226926036dfc4ca7955469f3028416cdccf4fbf48a2c03e3a7d496be0ce29f111d7f1a6399d8c898842f8bab1607f3ce22a59d0d514991359e8b4721d2d11ea97a5f59e94095547278feedf21ad5a24f5497857be973d8a7be154eabc56c1f52c0f806641ccdebc0f066dc1f05b98a58e72a826e1f8472cf3560028ee825671ef3da7a943d06eaa08365217706af08d6128c4eef793512bba52bf7fae69b3395443f73e954dab341f7d255a20da2bc5a9c524f52a990dbef6515558a17700ca34062553473f7ab42408b13832ea28a47b4b7f6792f0d35dd8960bae87f13ab8f67d257e5ad0c30b60f088bc208abacb9f1ec1d465c599ad8605bb4ae3edc572b367381b5b73f29a44503d9601fa5f1c3fc274d973bc118d99485878fa16075b76c69dc66b5ab25fb295a28542a87142455f8c79477c79ccec1eec6b387f85a777d04767a31a920fabadd1cd226d1f3e45f346282a02a603b20b5c206fd406ba0b44f158d2d6d0dabc83f377823c4f358b79ef2644467331204c40c9a5ac7b90a537919da3e4f340d3e262514")
	if err != nil {
		t.Fatal(err)
	}
	t.Log(signature)
}

func TestClient_BlockHeight(t *testing.T) {
	height, err := client.BlockHeight()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(height)
}

func TestClient_BtcBalance(t *testing.T) {
	balance, err := client.BtcBalance("tb1qn9fpljh5ggp407z02jx8x76pemzclgd6rla0qp")
	if err != nil {
		t.Fatal(err)
	}
	t.Log(balance)
}
